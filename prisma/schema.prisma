// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Books {
  id           String    @id @default(uuid())
  bookId       Int    @unique
  title        String
  authors      Json
  content      String
  accessedAt   DateTime
  analysis     BookAnalysis?
  userId       String
  openAIFileId String?
  user         User      @relation(fields: [userId], references: [id])
}

model BookAnalysis {
  id                 String    @id @default(uuid())
  bookId             Int    @unique
  keyCharacters      String
  language           String
  sentiment          String
  plotSummary        String
  analysisPerformedAt DateTime
  book               Books     @relation(fields: [bookId], references: [bookId])
}

model User {
  id          String    @id @default(uuid())
  name        String?
  email       String    @unique
  emailVerified DateTime?
  image       String?
  password    String?
  books       Books[]
  sessions    Session[]
}


model Session {
  id           String    @id @default(uuid())
  sessionToken String    @unique
  userId       String
  expires      DateTime
  user         User      @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id         String    @id @default(uuid())
  identifier String
  token      String    @unique
  expires    DateTime

  @@unique([identifier, token])
}
